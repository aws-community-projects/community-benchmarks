// Vitest Snapshot v1

exports[`BenchmarkMachineStack 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "BenchmarkStateMachineB3CFD9F0": {
      "DependsOn": [
        "BenchmarkStateMachineRoleDefaultPolicy2213D376",
        "BenchmarkStateMachineRole075570ED",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Parallel Execution 0","States":{"Parallel Execution 0":{"Type":"Parallel","Next":"Parallel Execution 1","Branches":[{"StartAt":"ParallelBenchmarkMachine 0","States":{"ParallelBenchmarkMachine 0":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM0LambdaBenchmarkStateMachine646A28DC",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 1","States":{"ParallelBenchmarkMachine 1":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM1LambdaBenchmarkStateMachine05189E5D",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 2","States":{"ParallelBenchmarkMachine 2":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM2LambdaBenchmarkStateMachineDD4389DC",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 3","States":{"ParallelBenchmarkMachine 3":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM3LambdaBenchmarkStateMachine416F823F",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 4","States":{"ParallelBenchmarkMachine 4":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM4LambdaBenchmarkStateMachine96FAC726",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 5","States":{"ParallelBenchmarkMachine 5":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM5LambdaBenchmarkStateMachine60C626A1",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 6","States":{"ParallelBenchmarkMachine 6":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM6LambdaBenchmarkStateMachine4C79BADC",
              },
              ""}}}},{"StartAt":"ParallelBenchmarkMachine 7","States":{"ParallelBenchmarkMachine 7":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM7LambdaBenchmarkStateMachineC45A4E37",
              },
              ""}}}}]},"Parallel Execution 1":{"Type":"Parallel","End":true,"Branches":[{"StartAt":"ParallelBenchmarkMachine 8","States":{"ParallelBenchmarkMachine 8":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"MaxAttempts":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              {
                "Ref": "LambdaBenchmarkSM8LambdaBenchmarkStateMachine8BC500E8",
              },
              ""}}}}]}},"TimeoutSeconds":600}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "BenchmarkStateMachineRole075570ED",
            "Arn",
          ],
        },
        "StateMachineName": "benchmark-machine",
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "BenchmarkStateMachineRole075570ED": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkStateMachineRoleDefaultPolicy2213D376": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM8LambdaBenchmarkStateMachine8BC500E8",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM0LambdaBenchmarkStateMachine646A28DC",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM1LambdaBenchmarkStateMachine05189E5D",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM2LambdaBenchmarkStateMachineDD4389DC",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM3LambdaBenchmarkStateMachine416F823F",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM4LambdaBenchmarkStateMachine96FAC726",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM5LambdaBenchmarkStateMachine60C626A1",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM6LambdaBenchmarkStateMachine4C79BADC",
              },
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaBenchmarkSM7LambdaBenchmarkStateMachineC45A4E37",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkStateMachineRoleDefaultPolicy2213D376",
        "Roles": [
          {
            "Ref": "BenchmarkStateMachineRole075570ED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarksTable35A54DAA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          {
            "AttributeName": "sk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "sk",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "Benchmarks",
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "GetTraces3BC6EA9B": {
      "DependsOn": [
        "GetTracesServiceRoleDefaultPolicyCE8FA86E",
        "GetTracesServiceRoleAB8F12D9",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-my-account-us-east-1",
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "EphemeralStorage": {
          "Size": 512,
        },
        "FunctionName": "get-traces",
        "Handler": "src/benchmark/get-traces.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "GetTracesServiceRoleAB8F12D9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "Timeout": 10,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetTracesServiceRoleAB8F12D9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetTracesServiceRoleDefaultPolicyCE8FA86E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "xray:BatchGetTraces",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetTracesServiceRoleDefaultPolicyCE8FA86E",
        "Roles": [
          {
            "Ref": "GetTracesServiceRoleAB8F12D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM0LambdaBenchmarkStateMachine646A28DC": {
      "DependsOn": [
        "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleDefaultPolicy495D4F49",
        "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleC1AFF4AB",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func1","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func1"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleC1AFF4AB",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleC1AFF4AB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleDefaultPolicy495D4F49": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func1",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func1",
                "arn:aws:lambda:us-east-9:987654321:function:test-func1:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleDefaultPolicy495D4F49",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM0LambdaBenchmarkStateMachineRoleC1AFF4AB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM1LambdaBenchmarkStateMachine05189E5D": {
      "DependsOn": [
        "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRoleDefaultPolicy93356AEF",
        "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRole7EBC33C6",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func2","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func2"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRole7EBC33C6",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRole7EBC33C6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRoleDefaultPolicy93356AEF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func2",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func2",
                "arn:aws:lambda:us-east-9:987654321:function:test-func2:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRoleDefaultPolicy93356AEF",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM1LambdaBenchmarkStateMachineRole7EBC33C6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM2LambdaBenchmarkStateMachineDD4389DC": {
      "DependsOn": [
        "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleDefaultPolicy118D2C2F",
        "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleAA6FE5AF",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func3","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func3"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleAA6FE5AF",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleAA6FE5AF": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleDefaultPolicy118D2C2F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func3",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func3",
                "arn:aws:lambda:us-east-9:987654321:function:test-func3:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleDefaultPolicy118D2C2F",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM2LambdaBenchmarkStateMachineRoleAA6FE5AF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM3LambdaBenchmarkStateMachine416F823F": {
      "DependsOn": [
        "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleDefaultPolicy774B91B7",
        "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleD9DD4A30",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func4","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func4"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleD9DD4A30",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleD9DD4A30": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleDefaultPolicy774B91B7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func4",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func4",
                "arn:aws:lambda:us-east-9:987654321:function:test-func4:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleDefaultPolicy774B91B7",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM3LambdaBenchmarkStateMachineRoleD9DD4A30",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM4LambdaBenchmarkStateMachine96FAC726": {
      "DependsOn": [
        "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleDefaultPolicy6B795F25",
        "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleCAF352C0",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func5","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func5"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleCAF352C0",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleCAF352C0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleDefaultPolicy6B795F25": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func5",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func5",
                "arn:aws:lambda:us-east-9:987654321:function:test-func5:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleDefaultPolicy6B795F25",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM4LambdaBenchmarkStateMachineRoleCAF352C0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM5LambdaBenchmarkStateMachine60C626A1": {
      "DependsOn": [
        "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRoleDefaultPolicy1FEF1B28",
        "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRole1AACA054",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func6","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func6"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRole1AACA054",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRole1AACA054": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRoleDefaultPolicy1FEF1B28": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func6",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func6",
                "arn:aws:lambda:us-east-9:987654321:function:test-func6:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRoleDefaultPolicy1FEF1B28",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM5LambdaBenchmarkStateMachineRole1AACA054",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM6LambdaBenchmarkStateMachine4C79BADC": {
      "DependsOn": [
        "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleDefaultPolicyA48D749F",
        "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleB44CE459",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func7","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func7"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleB44CE459",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleB44CE459": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleDefaultPolicyA48D749F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func7",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func7",
                "arn:aws:lambda:us-east-9:987654321:function:test-func7:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleDefaultPolicyA48D749F",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM6LambdaBenchmarkStateMachineRoleB44CE459",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM7LambdaBenchmarkStateMachineC45A4E37": {
      "DependsOn": [
        "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRoleDefaultPolicyE7E84F7F",
        "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRole7BDCC0D7",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func8","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func8"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRole7BDCC0D7",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRole7BDCC0D7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRoleDefaultPolicyE7E84F7F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func8",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func8",
                "arn:aws:lambda:us-east-9:987654321:function:test-func8:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRoleDefaultPolicyE7E84F7F",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM7LambdaBenchmarkStateMachineRole7BDCC0D7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaBenchmarkSM8LambdaBenchmarkStateMachine8BC500E8": {
      "DependsOn": [
        "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleDefaultPolicy47F2B635",
        "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleA184FB4D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Configure","States":{"Configure":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map"},"Lambda Map":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces","Iterator":{"StartAt":"LambdaInvoke","States":{"LambdaInvoke":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func9","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces":{"Next":"GetFunc","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":5}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"SendFailure"}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc":{"Next":"ParseDescription","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func9"}},"ParseDescription":{"Type":"Pass","ResultPath":"$.Function.Configuration.Description","Parameters":{"Description.$":"States.StringToJson($.Function.Configuration.Description)"},"Next":"PutItem"},"PutItem":{"Next":"SendSuccess","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload.name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload.date, $.Traces.Payload.name)"},"date":{"S.$":"$.Traces.Payload.date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"format":{"S.$":"$.Function.Configuration.Description.Description.format"},"minify":{"BOOL.$":"$.Function.Configuration.Description.Description.minify"},"sdk":{"S.$":"$.Function.Configuration.Description.Description.sdk"},"sourceType":{"S.$":"$.Function.Configuration.Description.Description.sourceType"},"xray":{"BOOL.$":"$.Function.Configuration.Description.Description.xray"},"name":{"S.$":"$.Traces.Payload.name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload.coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload.averageDuration)"},"iterations":{"N.$":"States.Format('{}', $.Traces.Payload.iterations)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload.p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload.p90Duration)"}},"TableName":"",
              {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}},"SendFailure":{"End":true,"Type":"Task","InputPath":"$","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskFailure","Parameters":{"Cause":"No Traces Found!","Error":"404","TaskToken.$":"$$.Execution.Input.token"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleA184FB4D",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleA184FB4D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "sst:app",
            "Value": "my-app",
          },
          {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleDefaultPolicy47F2B635": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "GetTraces3BC6EA9B",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "GetTraces3BC6EA9B",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func9",
            },
            {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "sfn:sendTaskFailure",
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                "arn:aws:lambda:us-east-9:987654321:function:test-func9",
                "arn:aws:lambda:us-east-9:987654321:function:test-func9:*",
              ],
            },
            {
              "Action": [
                "states:SendTaskFailure",
                "states:SendTaskSuccess",
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:states:us-east-1:my-account:stateMachine:benchmark-machine",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleDefaultPolicy47F2B635",
        "Roles": [
          {
            "Ref": "LambdaBenchmarkSM8LambdaBenchmarkStateMachineRoleA184FB4D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SSTMetadata": {
      "Metadata": {
        "sst:constructs": [
          {
            "addr": "c88a2d14f35684213fa9de999b19bfb671a345c172",
            "data": {
              "consumers": [],
              "tableName": {
                "Ref": "BenchmarksTable35A54DAA",
              },
            },
            "id": "BenchmarksTable",
            "stack": "dev-my-app-test-stack",
            "type": "Table",
          },
          {
            "addr": "c8ec2d4dcb4e875f0933e26b27315ac410acfe7909",
            "data": {
              "arn": {
                "Fn::GetAtt": [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "localId": "dev-my-app-test-stack-GetTraces",
            },
            "id": "GetTraces",
            "stack": "dev-my-app-test-stack",
            "type": "Function",
          },
        ],
        "sst:version": "1.2.30",
      },
      "Type": "AWS::CDK::Metadata",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
