// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BenchmarkMachineStack 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BenchmarkMachineD444767E": Object {
      "DependsOn": Array [
        "BenchmarkMachineRoleDefaultPolicy370986CA",
        "BenchmarkMachineRoleD71722DD",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{"StartAt":"Parallel Execution","States":{"Parallel Execution":{"Type":"Parallel","End":true,"Branches":[{"StartAt":"StepFunctionsStartExecution 0","States":{"StepFunctionsStartExecution 0":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              Object {
                "Ref": "ParallelStateMachine097C2BE3B",
              },
              ""}}}},{"StartAt":"StepFunctionsStartExecution 1","States":{"StepFunctionsStartExecution 1":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              Object {
                "Ref": "ParallelStateMachine1E4136085",
              },
              ""}}}},{"StartAt":"StepFunctionsStartExecution 2","States":{"StepFunctionsStartExecution 2":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::states:startExecution.waitForTaskToken","Parameters":{"Input":{"token.$":"$$.Task.Token"},"StateMachineArn":"",
              Object {
                "Ref": "ParallelStateMachine2EEB6CFAF",
              },
              ""}}}}]}},"TimeoutSeconds":600}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "BenchmarkMachineRoleD71722DD",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "BenchmarkMachineRoleD71722DD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BenchmarkMachineRoleDefaultPolicy370986CA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "ParallelStateMachine097C2BE3B",
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "ParallelStateMachine1E4136085",
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "ParallelStateMachine2EEB6CFAF",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BenchmarkMachineRoleDefaultPolicy370986CA",
        "Roles": Array [
          Object {
            "Ref": "BenchmarkMachineRoleD71722DD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BenchmarksTable35A54DAA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "sk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "sk",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": "Benchmarks",
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "GetTraces3BC6EA9B": Object {
      "DependsOn": Array [
        "GetTracesServiceRoleDefaultPolicyCE8FA86E",
        "GetTracesServiceRoleAB8F12D9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-my-account-us-east-1",
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "FunctionName": "get-traces",
        "Handler": "src/benchmark/get-traces.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "GetTracesServiceRoleAB8F12D9",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "Timeout": 10,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetTracesServiceRoleAB8F12D9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetTracesServiceRoleDefaultPolicyCE8FA86E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "xray:BatchGetTraces",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetTracesServiceRoleDefaultPolicyCE8FA86E",
        "Roles": Array [
          Object {
            "Ref": "GetTracesServiceRoleAB8F12D9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParallelStateMachine097C2BE3B": Object {
      "DependsOn": Array [
        "ParallelStateMachine0RoleDefaultPolicy603F0C1A",
        "ParallelStateMachine0Role77096CBE",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{"StartAt":"Configure 0","States":{"Configure 0":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map 0"},"Lambda Map 0":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces 0","Iterator":{"StartAt":"LambdaInvoke 0","States":{"LambdaInvoke 0":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func1","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces 0":{"Next":"GetFunc 0","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":10}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc 0":{"Next":"PutItem 0","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func1"}},"PutItem 0":{"Next":"SendSuccess 0","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload[0].name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload[0].date, $.Traces.Payload[0].name)"},"date":{"S.$":"$.Traces.Payload[0].date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"description":{"S.$":"$.Function.Configuration.Description"},"name":{"S.$":"$.Traces.Payload[0].name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload[0].coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageDuration)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90Duration)"}},"TableName":"",
              Object {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess 0":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ParallelStateMachine0Role77096CBE",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ParallelStateMachine0Role77096CBE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ParallelStateMachine0RoleDefaultPolicy603F0C1A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func1",
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    Object {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func1",
            },
            Object {
              "Action": "states:SendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ParallelStateMachine0RoleDefaultPolicy603F0C1A",
        "Roles": Array [
          Object {
            "Ref": "ParallelStateMachine0Role77096CBE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParallelStateMachine1E4136085": Object {
      "DependsOn": Array [
        "ParallelStateMachine1RoleDefaultPolicyBB7E379E",
        "ParallelStateMachine1Role1D876692",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{"StartAt":"Configure 1","States":{"Configure 1":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map 1"},"Lambda Map 1":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces 1","Iterator":{"StartAt":"LambdaInvoke 1","States":{"LambdaInvoke 1":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func2","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces 1":{"Next":"GetFunc 1","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":10}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc 1":{"Next":"PutItem 1","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func2"}},"PutItem 1":{"Next":"SendSuccess 1","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload[0].name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload[0].date, $.Traces.Payload[0].name)"},"date":{"S.$":"$.Traces.Payload[0].date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"description":{"S.$":"$.Function.Configuration.Description"},"name":{"S.$":"$.Traces.Payload[0].name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload[0].coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageDuration)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90Duration)"}},"TableName":"",
              Object {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess 1":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ParallelStateMachine1Role1D876692",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ParallelStateMachine1Role1D876692": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ParallelStateMachine1RoleDefaultPolicyBB7E379E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func2",
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    Object {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func2",
            },
            Object {
              "Action": "states:SendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ParallelStateMachine1RoleDefaultPolicyBB7E379E",
        "Roles": Array [
          Object {
            "Ref": "ParallelStateMachine1Role1D876692",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParallelStateMachine2EEB6CFAF": Object {
      "DependsOn": Array [
        "ParallelStateMachine2RoleDefaultPolicy14C24CC2",
        "ParallelStateMachine2RoleF3329A72",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{"StartAt":"Configure 2","States":{"Configure 2":{"Type":"Pass","Result":[0,1,2,3,4,5,6,7,8,9],"ResultPath":"$.Passes","Next":"Lambda Map 2"},"Lambda Map 2":{"Type":"Map","ResultPath":"$.MapResult","Next":"GetTraces 2","Iterator":{"StartAt":"LambdaInvoke 2","States":{"LambdaInvoke 2":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func3","Payload":{}}}}},"ItemsPath":"$.Passes","MaxConcurrency":5},"GetTraces 2":{"Next":"GetFunc 2","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"MaxAttempts":10}],"Type":"Task","ResultPath":"$.Traces","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"GetFunc 2":{"Next":"PutItem 2","Type":"Task","ResultPath":"$.Function","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:lambda:getFunction","Parameters":{"FunctionName":"arn:aws:lambda:us-east-9:987654321:function:test-func3"}},"PutItem 2":{"Next":"SendSuccess 2","Type":"Task","ResultPath":"$.PutItem","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S.$":"$.Traces.Payload[0].name"},"sk":{"S.$":"States.Format('{}#{}', $.Traces.Payload[0].date, $.Traces.Payload[0].name)"},"date":{"S.$":"$.Traces.Payload[0].date"},"architectures":{"S.$":"$.Function.Configuration.Architectures[0]"},"codeSize":{"N.$":"States.Format('{}', $.Function.Configuration.CodeSize)"},"description":{"S.$":"$.Function.Configuration.Description"},"name":{"S.$":"$.Traces.Payload[0].name"},"memorySize":{"N.$":"States.Format('{}', $.Function.Configuration.MemorySize)"},"runtime":{"S.$":"$.Function.Configuration.Runtime"},"coldStartPercent":{"N.$":"States.Format('{}', $.Traces.Payload[0].coldStartPercent)"},"averageColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageColdStart)"},"averageDuration":{"N.$":"States.Format('{}', $.Traces.Payload[0].averageDuration)"},"p90ColdStart":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90ColdStart)"},"p90Duration":{"N.$":"States.Format('{}', $.Traces.Payload[0].p90Duration)"}},"TableName":"",
              Object {
                "Ref": "BenchmarksTable35A54DAA",
              },
              ""}},"SendSuccess 2":{"End":true,"Type":"Task","Resource":"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sfn:sendTaskSuccess","Parameters":{"Output.$":"$.Traces.Payload","TaskToken.$":"$.token"}}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ParallelStateMachine2RoleF3329A72",
            "Arn",
          ],
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
        "TracingConfiguration": Object {
          "Enabled": true,
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ParallelStateMachine2RoleDefaultPolicy14C24CC2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
                "xray:GetSamplingRules",
                "xray:GetSamplingTargets",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:getFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func3",
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:us-east-1:my-account:table/",
                    Object {
                      "Ref": "BenchmarksTable35A54DAA",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "sfn:sendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": "arn:aws:lambda:us-east-9:987654321:function:test-func3",
            },
            Object {
              "Action": "states:SendTaskSuccess",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ParallelStateMachine2RoleDefaultPolicy14C24CC2",
        "Roles": Array [
          Object {
            "Ref": "ParallelStateMachine2RoleF3329A72",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ParallelStateMachine2RoleF3329A72": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "states.us-east-1.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "sst:app",
            "Value": "my-app",
          },
          Object {
            "Key": "sst:stage",
            "Value": "dev",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SSTMetadata": Object {
      "Metadata": Object {
        "sst:constructs": Array [
          Object {
            "addr": "c88a2d14f35684213fa9de999b19bfb671a345c172",
            "data": Object {
              "consumers": Array [],
              "tableName": Object {
                "Ref": "BenchmarksTable35A54DAA",
              },
            },
            "id": "BenchmarksTable",
            "stack": "dev-my-app-test-stack",
            "type": "Table",
          },
          Object {
            "addr": "c8ec2d4dcb4e875f0933e26b27315ac410acfe7909",
            "data": Object {
              "arn": Object {
                "Fn::GetAtt": Array [
                  "GetTraces3BC6EA9B",
                  "Arn",
                ],
              },
              "localId": "dev-my-app-test-stack-GetTraces",
            },
            "id": "GetTraces",
            "stack": "dev-my-app-test-stack",
            "type": "Function",
          },
        ],
        "sst:version": "0.69.5",
      },
      "Type": "AWS::CDK::Metadata",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
